[{"D:\\Qois\\logbook\\logbook\\src\\index.js":"1","D:\\Qois\\logbook\\logbook\\src\\reportWebVitals.js":"2","D:\\Qois\\logbook\\logbook\\src\\App.js":"3","D:\\Qois\\logbook\\logbook\\src\\container\\Home\\Home.jsx":"4","D:\\Qois\\logbook\\logbook\\src\\container\\Pages\\LogBook\\Logbook.js":"5","D:\\Qois\\logbook\\logbook\\src\\services\\index.js":"6","D:\\Qois\\logbook\\logbook\\src\\services\\Get.js":"7","D:\\Qois\\logbook\\logbook\\src\\services\\Config.js":"8","D:\\Qois\\logbook\\logbook\\src\\services\\Post.js":"9","D:\\Qois\\logbook\\logbook\\src\\services\\Delete.js":"10","D:\\Qois\\logbook\\logbook\\src\\services\\Put.js":"11","D:\\Qois\\logbook\\logbook\\src\\container\\Pages\\LogData\\Logdata.js":"12"},{"size":543,"mtime":1649487683353,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1649401288385,"results":"15","hashOfConfig":"14"},{"size":528,"mtime":1649401287092,"results":"16","hashOfConfig":"14"},{"size":7930,"mtime":1649837910872,"results":"17","hashOfConfig":"14"},{"size":14381,"mtime":1649853575190,"results":"18","hashOfConfig":"14"},{"size":880,"mtime":1649938675985,"results":"19","hashOfConfig":"14"},{"size":414,"mtime":1649723047293,"results":"20","hashOfConfig":"14"},{"size":57,"mtime":1649510074629,"results":"21","hashOfConfig":"14"},{"size":375,"mtime":1649650518103,"results":"22","hashOfConfig":"14"},{"size":369,"mtime":1649650498300,"results":"23","hashOfConfig":"14"},{"size":359,"mtime":1649655055696,"results":"24","hashOfConfig":"14"},{"size":21271,"mtime":1649943296071,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},"248504",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Qois\\logbook\\logbook\\src\\index.js",["66"],[],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Home from './container/Home/Home';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["67","68"],"D:\\Qois\\logbook\\logbook\\src\\reportWebVitals.js",[],[],"D:\\Qois\\logbook\\logbook\\src\\App.js",[],[],"D:\\Qois\\logbook\\logbook\\src\\container\\Home\\Home.jsx",["69","70","71","72","73","74","75"],[],"import React, { Fragment } from \"react\";\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n//import Link from '@mui/material/Link';\r\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\r\nimport App from \"../../App\";\r\nimport Logbook from \"../Pages/LogBook/Logbook\";\r\nimport LogData from \"../Pages/LogData/Logdata\";\r\n\r\n\r\nconst Home = () => {\r\n    const pages = ['Data Log Book', 'Pricing', 'Blog'];\r\n    const settings = ['Profile', 'Account', 'Dashboard', 'Logout'];\r\n    const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n\r\n    const handleOpenNavMenu = (event) => {\r\n        setAnchorElNav(event.currentTarget);\r\n    };\r\n    const handleOpenUserMenu = (event) => {\r\n        setAnchorElUser(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseNavMenu = () => {\r\n        setAnchorElNav(null);\r\n    };\r\n\r\n    const handleCloseUserMenu = () => {\r\n        setAnchorElUser(null);\r\n    };\r\n    return (\r\n        <BrowserRouter>\r\n        <Fragment>\r\n            <AppBar position=\"fixed\">\r\n                <Container maxWidth=\"xl\">\r\n                    <Toolbar disableGutters>\r\n                        <Typography\r\n                            variant=\"h6\"\r\n                            noWrap\r\n                            component=\"div\"\r\n                            sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\r\n                        >\r\n                            Log Book\r\n                        </Typography>\r\n\r\n                        <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n                            <IconButton\r\n                                size=\"large\"\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleOpenNavMenu}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"menu-appbar\"\r\n                                anchorEl={anchorElNav}\r\n                                anchorOrigin={{\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'left',\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'left',\r\n                                }}\r\n                                open={Boolean(anchorElNav)}\r\n                                onClose={handleCloseNavMenu}\r\n                                sx={{\r\n                                    display: { xs: 'block', md: 'none' },\r\n                                }}\r\n                            >\r\n                                    {/* Mobile */}\r\n                                    <Link to=\"/log-book\" style={{ textDecoration: 'none', color:'#000' }}>\r\n                                    <MenuItem key=\"kl\" >\r\n                                        <Typography textAlign=\"center\">Data Log Book</Typography>\r\n                                    </MenuItem>\r\n                                    </Link>\r\n                                    <Link to=\"/\" style={{ textDecoration: 'none', color:'#000' }}>\r\n                                    <MenuItem key=\"app\" >\r\n                                        <Typography textAlign=\"center\">App</Typography>\r\n                                    </MenuItem>\r\n                                    </Link>\r\n                            \r\n                            </Menu>\r\n                        </Box>\r\n                        <Typography\r\n                            variant=\"h6\"\r\n                            noWrap\r\n                            component=\"div\"\r\n                            sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\r\n                        >\r\n                            Log Book\r\n                        </Typography>\r\n\r\n                        {/* Menu */}\r\n\r\n                        <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n\r\n                            <Link to=\"/log-book\"  style={{ textDecoration: 'none' }}>\r\n                                <Button key=\"ddd\" sx={{ my: 2, color: 'white', display: 'block' }}>\r\n                                    Data User\r\n                                </Button>\r\n                            </Link>\r\n                            <Link to=\"/log-data\"  style={{ textDecoration: 'none' }}>\r\n                                <Button key=\"ddd\" sx={{ my: 2, color: 'white', display: 'block' }}>\r\n                                    Data Log Book\r\n                                </Button>\r\n                            </Link>\r\n                            <Link to=\"/\"  style={{ textDecoration: 'none' }}>\r\n                                <Button key=\"ddd\" sx={{ my: 2, color: 'white', display: 'block' }}>\r\n                                   App\r\n                                </Button>\r\n                            </Link>\r\n\r\n                        </Box>\r\n                        {/* Logout dll */}\r\n\r\n                        {/* <Box sx={{ flexGrow: 0 }}>\r\n                            <Tooltip title=\"Open settings\">\r\n                                <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                                    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Menu\r\n                                sx={{ mt: '45px' }}\r\n                                id=\"menu-appbar\"\r\n                                anchorEl={anchorElUser}\r\n                                anchorOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                open={Boolean(anchorElUser)}\r\n                                onClose={handleCloseUserMenu}\r\n                            >\r\n                                {settings.map((setting) => (\r\n                                    <MenuItem key={setting} onClick={handleCloseUserMenu}>\r\n                                        <Typography textAlign=\"center\">{setting}</Typography>\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Menu>\r\n                        </Box> */}\r\n                    </Toolbar>\r\n                </Container>\r\n            </AppBar>\r\n        \r\n                <Routes>\r\n                    <Route path=\"/\" exact element={<App />}></Route>\r\n                    <Route path=\"/log-book\" element={<Logbook />}></Route>\r\n                    <Route path=\"/log-data\" element={<LogData />}></Route>\r\n                 \r\n                </Routes>\r\n          \r\n        </Fragment>\r\n        </BrowserRouter>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Home;\r\n\r\n","D:\\Qois\\logbook\\logbook\\src\\container\\Pages\\LogBook\\Logbook.js",["76","77","78","79","80","81","82","83","84","85","86"],[],"//base\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\n//self\r\nimport GENI from \"../../../services\";\r\n\r\n//material ui\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport { Container, Typography } from \"@mui/material\";\r\nimport Divider from '@mui/material/Divider';\r\nimport { makeStyles } from '@mui/styles';\r\nimport TextField from '@mui/material/TextField';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    divider: {\r\n        // Theme Color, or use css color in quote\r\n        background: theme.palette.divider,\r\n    },\r\n}))\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n        fontSize: 14,\r\n    },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n    '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n    },\r\n    // hide last border\r\n    '&:last-child td, &:last-child th': {\r\n        border: 0,\r\n    },\r\n}));\r\n\r\nconst Logbook = () => {\r\n    //deklarasi const\r\n    const [post, setPost] = useState([]);\r\n    const [data, setData] = useState(false);\r\n    const [tipe, setTipe] = useState(false);\r\n    const [kd_user, setKd_user] = useState('');\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [alert, setAlert] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        kd_user: \"\",\r\n        nama: \"\",\r\n        username: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    //cari data\r\n    const requestSearch = (searchVal) => {\r\n        const filteredRows = post.filter((row) => {\r\n            return row.nama.toLowerCase().includes(searchVal.toLowerCase())\r\n        })\r\n        setPost(filteredRows);\r\n        if (searchVal === \"\") {\r\n            getDataAPI()\r\n        }\r\n    }\r\n\r\n    const cancelSearch = () => {\r\n        setSearch(\"\");\r\n        requestSearch(search)\r\n        getDataAPI()\r\n    }\r\n\r\n\r\n    //alert\r\n    const Alert = React.forwardRef(function Alert(props, ref) {\r\n        return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n    });\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setAlert(false);\r\n    };\r\n\r\n\r\n    //datatable\r\n    const handleChangePage = (e, newPage) => {\r\n        setPage(newPage);\r\n    }\r\n\r\n    const handleChangeRowsPerPage = (e) => {\r\n        setRowsPerPage(+e.target.value)\r\n        setPage(0)\r\n    }\r\n\r\n    //get data user\r\n    const getDataAPI = () => {\r\n        GENI.getUser().then(result => {\r\n            setPost(result);\r\n            setData(true)\r\n        })\r\n    }\r\n\r\n    //get edit user\r\n    const editDataAPI = (e) => {\r\n        GENI.editUser(e).then(result => {\r\n            let a = result.map((row) => {\r\n                let b = row;\r\n                setFormData(row)\r\n                setKd_user(row.kd_user)\r\n                setTipe(true)\r\n            });\r\n        })\r\n    }\r\n\r\n    //put data user\r\n    const putDataAPI = (e) => {\r\n        GENI.updateUser(formData, kd_user).then(result => {\r\n            getDataAPI()\r\n            setFormData({\r\n                kd_user: '',\r\n                nama: '',\r\n                username: '',\r\n                password: ''\r\n            })\r\n        })\r\n    }\r\n\r\n    //post data user\r\n    const postDataAPI = () => {\r\n        GENI.postUser(formData).then(result => {\r\n            getDataAPI()\r\n            setFormData({\r\n                kd_user: '',\r\n                nama: '',\r\n                username: '',\r\n                password: ''\r\n            })\r\n        })\r\n    }\r\n\r\n    // const FormChange = (event,type) => {\r\n    //     setNama(event.target.name);\r\n    // }\r\n\r\n    const handleSubmit = (e) => {\r\n        if (formData.nama == \"\" || formData.username == \"\" || formData.password == \"\") {\r\n           console.log(\"data Harus diisis\")\r\n        } else {\r\n            if (tipe) {\r\n                putDataAPI()\r\n            } else {\r\n                postDataAPI()\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    //delete data\r\n    // const handleDelete = (e) => {\r\n    //     GENI.deleteUser(e).then(result => {\r\n    //         getDataAPI();\r\n    //     })\r\n    // }\r\n\r\n    const handleDelete = e => {\r\n        confirmAlert({\r\n            title: \"Konfirmasi Hapus\",\r\n            message: \"Apakah Data Akan Dihapus?\",\r\n            buttons: [\r\n                {\r\n                    label: \"Ya\",\r\n                    onClick: () => {\r\n                        GENI.deleteUser(e).then(result => {\r\n                            getDataAPI();\r\n                            setAlert(true)\r\n                        })\r\n                    }\r\n                },\r\n                {\r\n                    label: \"Tidak\"\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        // setTimeout(() => {\r\n        //     getDataAPI();\r\n        // }, 2000)\r\n        getDataAPI()\r\n    }, [data]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <CssBaseline />\r\n            <Box sx={{ bgcolor: '#f7f5f0', height: '100vh' }}>\r\n                <Grid container paddingTop={15} paddingLeft={10} >\r\n                    <Typography variant=\"h4\" component=\"div\" style={{ fontWeight: 600 }} gutterBottom>\r\n                        Form Pengguna\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid container paddingLeft={10} paddingRight={10}>\r\n                    <Card sx={{ minWidth: 275, width: '100%' }} >\r\n                        <Divider textAlign=\"left\" style={{ paddingTop: '10px', paddingLeft: '20px', paddingRight: '20px', borderBlockColor: \"blue\" }}><Typography variant=\"h5\" component=\"div\" style={{ fontWeight: 600 }} gutterBottom>\r\n                            Form Pengguna\r\n                        </Typography></Divider>\r\n                        <Snackbar open={alert} autoHideDuration={3000} onClose={handleClose}>\r\n                            <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                                This is a success message!\r\n                            </Alert>\r\n                        </Snackbar>\r\n\r\n                        <CardContent>\r\n                            <Grid container justifyContent=\"center\" style={{ margin: 10 }} >\r\n                                <Grid item xs={2} justifyContent=\"center\">\r\n                                    <Typography sx={{ fontSize: 15, fontWeight: 600 }} style={{ paddingBottom: 30, marginLeft: 150, marginTop: 15 }} gutterBottom variant=\"h4\">\r\n                                        Nama Lengkap\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={10} justifyContent=\"center\">\r\n                                    <TextField style={{ width: '80%' }} name=\"nama\" onChange={(e) => setFormData({ ...formData, nama: e.target.value, kd_user: new Date().getTime() })} value={formData.nama} label=\"Nama Lengkap\"  size=\"small\"/>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container justifyContent=\"center\" style={{ margin: 10 }}>\r\n                                <Grid item xs={2}>\r\n                                    <Typography sx={{ fontSize: 15, fontWeight: 600 }} style={{ paddingBottom: 30, marginLeft: 150, marginTop: 15 }} gutterBottom variant=\"h4\">\r\n                                        Username\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={10} justifyContent=\"center\" >\r\n                                    <TextField style={{ width: '80%' }} name=\"username\" onChange={(e) => setFormData({ ...formData, username: e.target.value })} value={formData.username} label=\"Username\" size=\"small\"/>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container justifyContent=\"center\" style={{ margin: 10 }}>\r\n                                <Grid item xs={2}>\r\n                                    <Typography sx={{ fontSize: 15, fontWeight: 600 }} style={{ paddingBottom: 30, marginLeft: 150, marginTop: 15 }} gutterBottom variant=\"h4\">\r\n                                        Password\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={10} justifyContent=\"center\">\r\n                                    <TextField style={{ width: '80%' }}  name=\"password\" type=\"password\" onChange={(e) => setFormData({ ...formData, password: e.target.value })} value={formData.password} label=\"Password\" size=\"small\"/>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container justifyContent=\"center\" >\r\n                                <Button variant=\"contained\" onClick={(handleSubmit)} endIcon={<SendIcon />}>Simpan</Button>\r\n                            </Grid>\r\n                            <Grid container padding={2} >\r\n                                <SearchBar\r\n                                    value={search}\r\n                                    onChange={(searchVal) => requestSearch(searchVal)}\r\n                                    onCancelSearch={() => cancelSearch()}\r\n                                >\r\n                                </SearchBar>\r\n                            </Grid>\r\n                            <TableContainer component={Paper} padding={10}>\r\n                                <Table aria-label=\"customized table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <StyledTableCell style={{ width: '10vh' }} align=\"left\">No</StyledTableCell>\r\n                                            <StyledTableCell style={{ width: '20vh' }} align=\"left\">Nama Lengkap</StyledTableCell>\r\n                                            <StyledTableCell style={{ width: '20vh' }} align=\"left\">Username</StyledTableCell>\r\n                                            <StyledTableCell style={{ width: '20vh' }} align=\"left\">Action</StyledTableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {\r\n                                            post.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index = 1) => (\r\n                                                <StyledTableRow key={row.kd_user}>\r\n                                                    <StyledTableCell scope=\"row\" style={{ width: '2px', height: \"8px\" }}>\r\n                                                        {index + 1}\r\n                                                    </StyledTableCell>\r\n                                                    <StyledTableCell align=\"left\" style={{ height: \"8px\", padding: \"0px\" }}>{row.nama}</StyledTableCell>\r\n                                                    <StyledTableCell align=\"left\" style={{ height: \"8px\", padding: \"0px\" }}>{row.username}</StyledTableCell>\r\n                                                    <StyledTableCell align=\"left\" style={{ height: \"8px\", padding: \"0px\" }}><Button variant=\"contained\" style={{ margin: '1rem', background: '#4CAF50' }} onClick={() => editDataAPI(row.kd_user)} startIcon={<EditIcon />}>Edit</Button>\r\n                                                        <Button variant=\"contained\" style={{ background: 'red' }} onClick={() => handleDelete(row.kd_user)} startIcon={<DeleteIcon />}>Delete</Button>\r\n                                                    </StyledTableCell>\r\n                                                </StyledTableRow>\r\n                                            ))\r\n                                        }\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                            {\r\n                                post && post.length > 0 ? \" \"\r\n                                    : <LinearProgress component={Paper} color=\"primary\" style={{ width: '100%' }} />\r\n                            }\r\n                            <TablePagination\r\n                                rowsPerPageOptions={[5, 10, 25, 100]}\r\n                                component=\"div\"\r\n                                count={post.length}\r\n                                rowsPerPage={rowsPerPage}\r\n                                page={page}\r\n                                onPageChange={handleChangePage}\r\n                                onRowsPerPageChange={handleChangeRowsPerPage}\r\n                            >\r\n                            </TablePagination>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Box>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default Logbook;","D:\\Qois\\logbook\\logbook\\src\\services\\index.js",[],[],"D:\\Qois\\logbook\\logbook\\src\\services\\Get.js",[],[],"D:\\Qois\\logbook\\logbook\\src\\services\\Config.js",[],[],"D:\\Qois\\logbook\\logbook\\src\\services\\Post.js",[],[],"D:\\Qois\\logbook\\logbook\\src\\services\\Delete.js",[],[],"D:\\Qois\\logbook\\logbook\\src\\services\\Put.js",[],[],"D:\\Qois\\logbook\\logbook\\src\\container\\Pages\\LogData\\Logdata.js",["87","88","89","90","91","92","93","94","95","96"],[],{"ruleId":"97","severity":1,"message":"98","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":11},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"97","severity":1,"message":"105","line":10,"column":8,"nodeType":"99","messageId":"100","endLine":10,"endColumn":14},{"ruleId":"97","severity":1,"message":"106","line":12,"column":8,"nodeType":"99","messageId":"100","endLine":12,"endColumn":15},{"ruleId":"97","severity":1,"message":"107","line":22,"column":11,"nodeType":"99","messageId":"100","endLine":22,"endColumn":16},{"ruleId":"97","severity":1,"message":"108","line":23,"column":11,"nodeType":"99","messageId":"100","endLine":23,"endColumn":19},{"ruleId":"97","severity":1,"message":"109","line":25,"column":12,"nodeType":"99","messageId":"100","endLine":25,"endColumn":24},{"ruleId":"97","severity":1,"message":"110","line":30,"column":11,"nodeType":"99","messageId":"100","endLine":30,"endColumn":29},{"ruleId":"97","severity":1,"message":"111","line":38,"column":11,"nodeType":"99","messageId":"100","endLine":38,"endColumn":30},{"ruleId":"97","severity":1,"message":"112","line":11,"column":10,"nodeType":"99","messageId":"100","endLine":11,"endColumn":21},{"ruleId":"97","severity":1,"message":"113","line":11,"column":23,"nodeType":"99","messageId":"100","endLine":11,"endColumn":36},{"ruleId":"97","severity":1,"message":"114","line":13,"column":8,"nodeType":"99","messageId":"100","endLine":13,"endColumn":19},{"ruleId":"97","severity":1,"message":"115","line":16,"column":10,"nodeType":"99","messageId":"100","endLine":16,"endColumn":19},{"ruleId":"97","severity":1,"message":"116","line":37,"column":7,"nodeType":"99","messageId":"100","endLine":37,"endColumn":16},{"ruleId":"97","severity":1,"message":"117","line":132,"column":17,"nodeType":"99","messageId":"100","endLine":132,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":132,"column":38,"nodeType":"120","messageId":"121","endLine":132,"endColumn":40},{"ruleId":"97","severity":1,"message":"122","line":133,"column":21,"nodeType":"99","messageId":"100","endLine":133,"endColumn":22},{"ruleId":"123","severity":1,"message":"124","line":172,"column":27,"nodeType":"125","messageId":"126","endLine":172,"endColumn":29},{"ruleId":"123","severity":1,"message":"124","line":172,"column":54,"nodeType":"125","messageId":"126","endLine":172,"endColumn":56},{"ruleId":"123","severity":1,"message":"124","line":172,"column":81,"nodeType":"125","messageId":"126","endLine":172,"endColumn":83},{"ruleId":"97","severity":1,"message":"112","line":12,"column":10,"nodeType":"99","messageId":"100","endLine":12,"endColumn":21},{"ruleId":"97","severity":1,"message":"113","line":12,"column":23,"nodeType":"99","messageId":"100","endLine":12,"endColumn":36},{"ruleId":"97","severity":1,"message":"127","line":13,"column":8,"nodeType":"99","messageId":"100","endLine":13,"endColumn":12},{"ruleId":"97","severity":1,"message":"114","line":14,"column":8,"nodeType":"99","messageId":"100","endLine":14,"endColumn":19},{"ruleId":"97","severity":1,"message":"115","line":17,"column":10,"nodeType":"99","messageId":"100","endLine":17,"endColumn":19},{"ruleId":"97","severity":1,"message":"128","line":19,"column":10,"nodeType":"99","messageId":"100","endLine":19,"endColumn":20},{"ruleId":"97","severity":1,"message":"129","line":28,"column":8,"nodeType":"99","messageId":"100","endLine":28,"endColumn":22},{"ruleId":"97","severity":1,"message":"130","line":41,"column":8,"nodeType":"99","messageId":"100","endLine":41,"endColumn":19},{"ruleId":"97","severity":1,"message":"131","line":45,"column":10,"nodeType":"99","messageId":"100","endLine":45,"endColumn":16},{"ruleId":"97","severity":1,"message":"132","line":47,"column":8,"nodeType":"99","messageId":"100","endLine":47,"endColumn":20},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["133"],"no-negated-in-lhs",["134"],"'Avatar' is defined but never used.","'Tooltip' is defined but never used.","'pages' is assigned a value but never used.","'settings' is assigned a value but never used.","'anchorElUser' is assigned a value but never used.","'handleOpenUserMenu' is assigned a value but never used.","'handleCloseUserMenu' is assigned a value but never used.","'createTheme' is defined but never used.","'ThemeProvider' is defined but never used.","'CardActions' is defined but never used.","'Container' is defined but never used.","'useStyles' is assigned a value but never used.","'a' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'b' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Card' is defined but never used.","'makeStyles' is defined but never used.","'LinearProgress' is defined but never used.","'FormControl' is defined but never used.","'format' is defined but never used.","'TagFacesIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]